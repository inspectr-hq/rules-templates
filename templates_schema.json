{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://req-inspector.dev/schemas/rule-template.json",
  "title": "Rule Template",
  "type": "object",
  "description": "Schema describing a rule template definition.",
  "additionalProperties": false,
  "required": [
    "name",
    "event",
    "priority",
    "expression",
    "actions"
  ],
  "properties": {
    "name": {
      "type": "string",
      "minLength": 1
    },
    "description": {
      "type": "string"
    },
    "event": {
      "type": "string",
      "minLength": 1
    },
    "priority": {
      "type": "integer"
    },
    "expression": {
      "$ref": "#/$defs/expression"
    },
    "actions": {
      "type": "array",
      "items": {
        "$ref": "#/$defs/action"
      }
    }
  },
  "$defs": {
    "action": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "type",
        "description",
        "params"
      ],
      "properties": {
        "type": {
          "type": "string",
          "minLength": 1
        },
        "description": {
          "type": "string"
        },
        "params": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/paramDescriptor"
          }
        }
      }
    },
    "paramDescriptor": {
      "type": "object",
      "additionalProperties": false,
      "required": [
        "name",
        "type",
        "required",
        "description"
      ],
      "properties": {
        "name": {
          "type": "string",
          "minLength": 1
        },
        "type": {
          "type": "string",
          "minLength": 1
        },
        "required": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "default": {
          "type": "string"
        }
      }
    },
    "expression": {
      "type": "object",
      "description": "Arbitrarily nested expression tree evaluated by the rule engine.",
      "additionalProperties": {
        "$ref": "#/$defs/expressionValue"
      }
    },
    "expressionValue": {
      "description": "Permissible expression value types including nested arrays and objects.",
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "number"
        },
        {
          "type": "boolean"
        },
        {
          "type": "null"
        },
        {
          "type": "array",
          "items": {
            "$ref": "#/$defs/expressionValue"
          }
        },
        {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/$defs/expressionValue"
          }
        }
      ]
    }
  }
}
